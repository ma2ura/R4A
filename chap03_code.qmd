---
title: "コード作成の作法"
---


::: {.callout-important}
## 覚えておくべき内容

1. コードを書くときは，**半角全角に超注意**
2. コードを書くときは，**インデントを揃える**
3. コメントをたくさん書く
4. 変数名は**原則**，英数字とアンダースコアのみ
:::



:::{layout-ncol=2}

![Readable Code](img/readablecode.jpg)

![The Principles](img/principle_program.jpg)
:::

オススメの本2冊

## コードの書き方

Rに限らず、プログラミング言語では、コードを書くときにいくつかの作法があります。
コードを書き始める前に、これらの作法を知っておくことは、コードを書くときに役立ちます。
作法を守って<span style = "color:magenta; font-weight: bold;">可読性が高いコード</span>を書くことで、エラーを防ぎつつ、また他人が読んだときにも理解しやすいコードを書くことができます。

### 半角英数と大文字小文字

コードを書くときには、**半角英数**を使うようにします。
**直接入力**とも呼ばれます。

またプログラミング言語では、**大文字と小文字を区別**します。
つまり、`a`と`A`は別の変数として扱われます。
一見、大文字と小文字の見分けが困難な文字もあるため、注意が必要です。

```{r}
X <- c(1, 2, 3) # 変数Xを作成
x <- c(1, 2, 3, 4, 5, 6)
X # どっちか紛らわしい
```
### インデントと半角スペース

コードを書くときには、**インデント**を揃えるようにします。
インデントとは、行頭の空白のことです。
インデントを揃えることで、どの行がどのブロックに属しているかが一目でわかります。
<span style = "color:magenta; font-weight: bold;">インデントはTABキー</span>を押すことで入力できます。

また、<span style = "color:magenta; font-weight: bold;">演算子の前後には半角スペースを入れる</span>ようにします。半角スペースは無視されるので、コードの実行には影響を与えません。

```{r}
#| eval: False
#インデントを揃えていないし、
#半角スペースも入れていない例
if(x>0){
y<-x*2
z<-x*3
}

# インデントを揃えて、半角スペースを入れた例
if (x > 0) {
  y <- x * 2
  z <- x * 3
}
# 読みやすいですよね。
```

コンマの後ろにも半角スペースを入れるようにします。

```{r}
dice<-c(1,2,3,4,5,6) # 見づらい
dice <- c(1, 2, 3, 4, 5, 6) # 見やすい
```

半角スペースと全角スペースを混在させないようにします。
全角スペースは文字として扱われるため、エラーの原因になります。たとえば、次のようなコードはエラーになりますが、発見することが難しいので、注意が必要です。

```{r}
#| eval: False
# 全角スペースや全角のコンマを使っているのでエラーになる
dice <- c(1、2、　3、 4、 5、 6)
```

### コメント

コードを書くときには、**コメント**を書くようにします。
コメントとは、コードの中にプログラマーがメモを残すためのものです。
コメントは、コードの実行には影響を与えません。
Rのコメントは、`#`で始まる行です。

```{r}
# これはコメントです。
# この行は実行されません。
dice <- 1:6 # サイコロを作成
```

コードを1ヶ月後に見直したとき、自分が何を思ってこのコードを書いたのかを思い出すことは難しいので、コメントは積極的に残すようにしましょう。

また，今まで皆さんは間違ったコードを書いてしまったときは，コードを削除していたかもしれませんが，どこが間違っているのか，後で確認できるように，コードは消さずにコメントアウトしておくようにしましょう。

```{r}
coin <- c("H", "T") # コインを作成
# mean(coin) # 文字列の平均はとれないのでエラーになる
```

### 変数名

変数名は自由に決めることができますが、いくつかのルールがあります。

- 変数名は、**英数字**と**アンダースコア**のみを使うようにします。少々長くなってもよいので、わかりやすい名前をつけましょう。
- 変数名は、**数字で始めてはいけません**。
- 変数名は、**大文字と小文字を区別します**。
- 変数名は、R上であらかじめ定義されている**予約語を使ってはいけません**。例えば、`if`や`for`などは予約語です。

RstudioやVS Codeにはコマンドや変数名を途中まで入力したら、補完してくれる機能があります。
したがって少々長い変数名でも、途中まで入力すれば補完してくれるので、入力もそこまで面倒ではないですし、変数名を覚える必要はありません。

```{r}
year_2000_2023 <- 2000:2023
```


::: {.column-margin}
数値`:`数値で、連続した整数値を作成することができます。
`1:10`は、1から10までの整数の数列を作成します。
:::

最近のバージョンのRでは日本語の変数名も使えます。

```{r}
売上高 <- c(100,240,420)
mean(売上高) # 平均が計算される
```

分かりやすいといえば，分かりやすいですが，日本語フォントは文字コードに表示が左右されるため，場合によっては文字化けの原因になります。

### まとめ

- R + RstudioかR+VS Codeを準備
- コードはインデントと半角スペースで見やすく
- コードにはコメントをたくさん書く
- 変数名は原則，英数字とアンダースコア`_`を使う。

## 練習

以下のコードを見やすいように半角スペースを入れて書き換えてください。

```{webr}
# 1〜10までの整数のベクトルをxに代入
x<-c(1:10)
print(x)
```