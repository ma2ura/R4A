---
title: "データフレーム"
---

## データフレームとは

```{r include=FALSE}
source("global.R")
```

Rでよく使われるデータの形式に**データフレーム**(data frame)があります。
データフレームは、**行と列からなる表形式のデータ**で、Excelのシートのようなものです。

::: {.column-margin}
Rにもともと備わっている`data.frame`の拡張版として、`tidyverse`では`tibble`というデータフレームの拡張版が使われていますが、初心者のうちはほとんど違いを意識することがないと思うので、ここでは`data.frame`を使います。
:::

![データフレームの例](img/data_frame.png){width="80%"}


## データフレームの作成

通常、外部のデータベースから取得したExcelデータやCSVデータをRで読み込むと、データフレームとして読み込まれます。
ここでは練習のために、`data.frame()`を使ってデータフレームを作成します。
`data.frame()`関数の引数は主に，

- `...` : 列に格納するデータ
- `row.names` : 行名
- `check.rows` : 行数をチェックするかどうか
- `check.names` : 列名をチェックするかどうか
- `stringsAsFactors` : 文字列を因子型に変換するかどうか
- `fix.empty.names` : 空の列名を修正するかどうか


以下では、3つの自動車メーカーの2022年と2023年の売上高をデータフレーム`df_car`に代入します。

```{r}
df_car <- data.frame( # データフレームを作成
    name = c(rep("トヨタ",2),rep("日産",2),rep("ホンダ",2)), # 企業名
    year = rep(c("2022", "2023"),3), # 年度
    sale = c(31379507,37154298,8424585,10596695,14552696,16907725)  # 売上高
)
df_car
```

::: {.column-margin}
`rep()`は、ベクトルの要素を繰り返す関数です。引数は、`rep(繰り返すベクトル, 繰り返す回数)`です。
:::

データフレーム`df_car`には、3つの変数があります。

1. name : 自動車メーカー名
2. year : 決算年
3. sale : 売上高(百万円)

次に、このデータフレームの中の特定の変数や値にアクセスする方法を説明します。

## 変数へのアクセス

データフレームの中の特定の変数にアクセスするには、`$`を使います。

![データフレームの変数](img/dataframe_access.png){width="80%"}

たとえば、`df_car`の`name`変数を表示するには、次のようにします。

```{r}
df_car$name
```

あるいは、データフレームの列数を指定することで、特定の変数にアクセスすることもできます。
Rのデータフレームは行と列に1から順に番号が振られています。

![データフレームの位置](img/data_frame_number.png){width="80%"}

特定の行、列、値にアクセスするには、`[行,列]`を指定します。

![変数へのアクセス](img/dataframe_access1.png){width="80%"}


例えば、`df_car`の1列目(つまり`name`変数)を表示するには、次のようにします。

```{r}
df_car[,1] # 1列目の変数
```

![列のアクセス](img/data_frame_row.png){width="80%"}

同様に、1行目（つまり`トヨタ`の`2022`年の行）を表示するには、次のようにします。

```{r}
df_car[1,] # 1列目の変数
```

![行のアクセス](img/data_frame_column.png){width="80%"}

さらに、`df_car`の特定の値にアクセスするには、次のようにします。

```{r}
df_car[2,3] # 2行目の3列目の値
```

![値のアクセス](img/data_frame_value.png){width="80%"}

条件を指定して、特定の行を抽出することもできます。


![条件の指定](img/data_frame_condition.png){width="80%"}


たとえば、`name`変数が`トヨタ`の行を抽出するには、次のようにします。

```{r}
df_car[df_car$name == "トヨタ",]
```

条件式の書き方には、主に以下のようなものがあります。

- `==` : 等しい
- `!=` : 等しくない
- `<` : より小さい
- `<=` : 以下
- `>` : より大きい
- `>=` : 以上
- `%in%` : ベクトルの中に含まれる

たとえば、`name`変数が`トヨタ`または`日産`の行を抽出するには、次のようにします。

```{r}
df_car[df_car$name %in% c("トヨタ", "日産"),]
```

