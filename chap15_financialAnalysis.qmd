---
title: "財務分析"
---

この章では、よく財務分析の教科書に登場する財務比率(financial ratio)の使い方や計算方法について説明します。
財務比率は、企業の財務状態を把握するための指標であり、企業の経営者や投資家、債権者、株主などが企業の財務状態を判断するために利用します。

財務比率を計算して、作図や作表するまでのプロセスはざっくり以下の通りです。

1. `read_csv()`でデータを読み込む。
2. `dplyr::rename()`で変数名を変更する。
3. `str()`で変数の型を確認し、カテゴリー変数を`factor()`とか`as.factor()`で因子型に変換する。
4. 欠損値にゼロを代入するか、その行を除去するかの方針を定めて、`dplyr::filter()`でデータを抽出したり、`dplyr::drop_na()`で欠損値を除去したりする。
5. 欠損値のないデータセットができたら、`dplyr::group_by()`と一緒に`dplyr::summarise()`や`dplyr::mutate()`を使って財務比率を計算する。
6. 計算した財務比率を`ggplot2`で作図したり、`kableExtra`で表を作成する。


財務比率は、企業の財務諸表項目の分数で表されるため、`group_by()`関数や`mutate()`関数を使うことで計算していきます。

必要なパッケージを読み込んでおきます。

```{r include=FALSE}
source("global.R") # 表の見た目を整えるための設定
library(tidyverse) # tidyverseパッケージ群
library(knitr) # 作表
library(kableExtra) # 作表の拡張
library(scales) # 軸の数値を制御
knitr::opts_chunk$set(dev = "ragg_png") # 文字化け対策
```


この章で分析対象とする企業は，

- 2010年度から2023年度までに期間に，
- 東京証券取引所のプライム・スタンダード・グロース市場に上場し，
- 従業員数が500名以上いる企業

とします。
この章で用いる会計項目は，

- `R001` 決算月数
- `R018` 上場場部：コード
- `R022` 日経業種：コード
- `B063` 有形固定資産
- `B110` 資産合計
- `D021` 売上高・営業収益
- `D101` 法人税等
- `D103` 法人税等調整額
- `D047` 支払利息・割引料
- `D110` 親会社株主に帰属する当期純利益
- `K075` [販管費] 人件費・福利厚生費
- `K079` [販管費] 賃借料
- `H021` 期末従業員数

です。
日経NEEDS社会科学情報検索システムでデータを集めるときは，以下の項目コードを使ってください。

```
R001,R018,R022,B063,B110,D021,D101,D103,D047,D110,K075,K079,H021
```

### データの読み込みと前処理

まずは分析するためのデータを読み込みます。
`getwd()`や`setwd()`を使って、CSVファイルが入っているフォルダが作業ディレクトリ(working directory)になっているかどうか確認・設定しておきましょう。

:::{.callout-caution}
日経NEEDS社会科学情報検索システムからダウンロードしたデータは，文字コードがShift-JISであるため，UTF-8を基本とするMacだと`read_csv`関数でそのまま読み込むと文字化けします。
そのため，`read_csv`関数の`locale`引数で`locale(encoding = "Shift_JIS")`を指定して読み込む必要があります。
`Shift_JIS`のところは，`cp932`や`sjis`でも大丈夫です。
:::

```{r}
#| cache: TRUE
df <- read_csv("data/TSE_2010_EMP500.csv")
```

:::{.column-margin}
`read_csv`関数でデータを読み込むと，
"Use `spec()` to retrieve the full column specification for this data."
"Specify the column types or set `show_col_types = FALSE` to quiet this message."
というメッセージが出ます。
読み込んだデータの完全な仕様(specification)をみたいなら`spec()`関数を使ってね。このメッセージを消したいなら，列のタイプを指定するか，`show_col_types = FALSE`を指定してね。ということです。無視して大丈夫です。
:::

日経NEEDSからダウンロードしたデータの変数名は、`親会社株主に帰属する当期純利益（連結）／当期利益（単独）［累計］`のように長いものがあるので，
分析しやすいように分かりやすい変数名に変更します。
変数名は半角英数の単語をアンダーバーでつなげたスネークケース(snake case)で書くことが推奨されます。

:::{.column-margin}
たとえば，`total_asset`や`num_employee`のように，変数名から中身が想像できる名前にすることが望ましいです。
一時的につかう変数であれば，`x`とか`g`でもよいですが，分析結果を他の人に見せるときは，分かりやすい変数名に変更することが望ましいです。
データフレームなら，`df_hoge`，テーブルなら`tbl_hoge`，行列なら`mat_hoge`など，変数名の先頭にデータ型を示す接頭辞をつけておくことも推奨されます。
:::

```{r}
# renameで変数名を変更
df <- df |>
  rename(
    nikkei_code = "日経会社コード",
    name = "企業名称",
    date = "決算期",
    kessan = "決算種別",
    renketsu = "連結基準",
    num_employee = "期末従業員数",
    kessan_month = "決算月数",
    listed_code = "上場場部：コード",
    industry_code = "日経業種：コード",
    total_asset = "資産合計",
    tangibles =  "有形固定資産",
    salary =  "【販管費】人件費・福利厚生費［累計］",
    rent_fee = "【販管費】賃借料［累計］",
    corporate_tax = "法人税等［累計］",
    tax_adjustment = "法人税等調整額／繰延税金費用［累計］",
    net_income =   "親会社株主に帰属する当期純利益（連結）／当期利益（単独）［累計］",
    interest_expense = "支払利息・割引料［累計］",
    sales = "売上高・営業収益［累計］"
  )
```

データが読み込めたら、まずは`head()`関数や`summary()`関数でデータの中身を確認します。

```{r}
head(df)
summary(df)
```

`summary()`の出力を見ると，各変数の記述統計量と欠損値`NA`の個数が表示されています。
賃借料`rent_fee`と支払利息`interest_expense`の欠損値が比較的多いように見えますが，これは企業が支払っている賃借料や支払利息が小さく，損益計算書に記載されていないだけなので，ここではゼロを代入するようにします。

:::{.column-margin}
(連結)財務諸表では，金額の小さな項目を「その他」にまとめて記載するため，金額が小さい個別の項目はデータ上欠損値になりますが，欠損しているわけではなく，金額が小さいだけなので，ここではゼロを代入しています。
:::

`NA`にゼロを代入するには，`is.na()`関数を使います。
`is.na()`関数は`NA`に`TRUE`を返す関数で，これをつかって`TRUE`となる値にゼロを代入する処理を行います。

:::{.callout-tip collapse="true"}
## 欠損値にゼロを入れる

たとえば，次のようなベクトル`x`に`NA`が含まれているかどうかを調べてみます。
```{r}
x <- c(1,2,NA,4,5)
is.na(x)
```
すると，`FALSE FALSE TRUE FALSE FALSE`と表示され，3番目の要素が`NA`であることが分かります。ここに3を代入するには，次のようにします。
```{r}
x[is.na(x)] <- 3
x
```
`x[is.na(x)]`とすると，`x`の中で`NA`の要素を取り出すことができ，そこに3を代入しています。
:::

```{r}
df$rent_fee[is.na(df$rent_fee)] <- 0
df$interest_expense[is.na(df$interest_expense)] <- 0
```

それ以外にも欠損値をもつ項目はありますが，売上高や当期純利益が欠損値となっているのは異常なので，そういった行は後で`filter()`関数で除外します。
データの構造を`glimpse()`関数で再確認します。

```{r}
glimpse(df)
```

日経コード`nikkei_code`と企業名称`name`、決算期`date`の３つは文字列`<chr>`で、それ以外の変数は数値`<dbl>`となっています。
しかし、実際は、`kessan`、`renketsu`、`listed_code`、`industry_code`はカテゴリカルデータであるため、`factor`型に変換します。

```{r}
df <- df |>
  mutate(
    kessan = as.factor(kessan),
    renketsu = as.factor(renketsu),
    listed_code = as.factor(listed_code),
    industry_code = as.factor(industry_code) # ファクター
  )
```

また財務比率は**分数**で計算されるため、分母がゼロあるいはゼロに近い値をもつと、計算ができなかったり、異常に大きい値が出てきたりします。
そのため、分母となる変数にゼロが含まないようにし、また異常値を除外します。
実証研究では、連続変数に対して上下1%以上の異常値を除外することが多いです。

```{r}

df <- df |> # 売上高、有形固定資産、従業員数が0の企業を除外
  filter(sales > 0 & tangibles > 0 & num_employee > 0) |>
  drop_na() # それ以外の欠損値をもつ行を削除
```

最後にデータを確認してみます。

```{r}
summary(df)
```

これで前処理が終わったので，次は生産性の分析に移っていきます。


## 生産性の分析

### 付加価値とその測定

**付加価値**(added value)とは，企業が新たに生み出した価値であり，**生産性**(productivity)とは付加価値を生み出す能力をいいます。
付加価値は，企業の生産性を測る指標として用いられます。

### 付加価値の測定

付加価値の測定方法には大きく，控除法と**加算法**の2つがあります。

控除法は，売上高から企業が消費した価値の額を引いたものです。
売上高は把握できますが，消費額は外部からは把握できないため，付加価値の測定が難しいです。

:::{.callout-note}
## 控除法
$$
付加価値 = 売上高 - 前段階の企業が生産した価値の消費額
$$
:::

そのため，よく利用されるのが加算法です。
企業がつくり出した付加価値は，
従業員に分配した人件費と，借主に支払った賃借料，国・地方自治体に支払った税金，債権者に支払った負債利子の合計に，
企業の当期純利益を加えたものとして，計算されます。

:::{.margin-note}
税金は連結損益計算書の法人税等から法人税調整額を加減したものとして計算します。
:::

:::{.callout-important}
## 加算法
$$
付加価値 = 人件費 + 賃借料 + 税金 + 負債利子 + 当期純利益
$$
:::

データの入手可能性から，加算法がよく利用されますが，人件費の特定が困難です。
資格試験では従業員数や給与の情報が与えられるので，そこから計算しますが，ここでは連結損益計算書の販売費及び一般管理費の内訳項目である「人件費・福利厚生費」を人件費として扱います。
`dplyr`パッケージの`mutate()`関数で付加価値の変数`added_value`を計算します。

```{r}
df <- df |>
  mutate(
    added_value = salary + rent_fee + (corporate_tax + tax_adjustment) + interest_expense + net_income
  )
summary(df$added_value)
```

付加価値を計算することできたので，付加価値を使った財務分析を行ってみます。

### 労働生産性の分析

**労働生産性**(labor productivity)とは，一定期間における付加価値を(平均)従業員数で割ったものです。
つまり，従業員一人が1年間に生み出した付加価値の額を示しています。

$$
労働生産性_t = \frac{付加価値_t}{平均従業員数_t}
$$
分子が付加価値というフロー情報であることから，分母の従業員数も期首と期末の平均をとることで対応させています。
では，計算してみましょう。
期首と期末の値を使って平均値を計算するため，`group_by()`関数と`lag()`関数を使います。

```{r}
df <- df |>
  group_by(nikkei_code) |> # 企業ごとに
  mutate(
    ave_employee = (lag(num_employee) + num_employee) / 2, # 平均従業員数
    labor_prod = added_value / ave_employee # 労働生産性
  )
```

新しく作った変数の記述統計量を確認します。

```{r}
summary(df$ave_employee)
```
最も従業員が少ない会社で12名，最大で約28万名と，従業員数のばらつきが大きいことが分かります。

```{r}
summary(df$labor_prod)
```
中央値が$5.257$で平均値が$7.262$と中央値の

ヒストグラムも作成してみます。

```{r}
ggplot(df) + aes(labor_prod) + geom_histogram()
```

分布が右に偏っており，大きな値に異常値がありそうです。

### 労働生産性の分解

**売上高**を用いた分解：売上高を挟みこむことで，労働生産性を，**一人当たり売上高**と**付加価値率**に分解できる。

$$
労働生産性 = \frac{付加価値額}{平均従業員数} = \underbrace{\frac{売上高}{平均従業員数}}_{1人当たり売上高} \times \underbrace{\frac{付加価値額}{売上高}}_{付加価値率}
$$

**有形固定資産**を用いた分解：有形固定資産を挟み込むことで，労働生産性を**労働装備率**と**設備生産性**に分解できる。

$$
労働生産性 =\frac{付加価値額}{平均従業員数} = \underbrace{\frac{平均有形固定資産}{平均従業員数}}_{労働装備率} \times \underbrace{\frac{付加価値額}{平均有形固定資産}}_{設備生産性}
$$

## 3. 付加価値の分配

付加価値の分配状況をみる。最も大きい分配先は**人件費**であり，**付加価値に占める人件費の割合**を**労働分配率**という。

$$
一人当たり人件費 = \frac{人件費}{平均従業員数} = \underbrace{\frac{付加価値額}{平均従業員数}}_{労働生産性} \times \underbrace{\frac{人件費}{付加価値額}}_{労働分配率}
$$

一人当たり人件費は，労働生産性と労働分配率に分類できる。

### 定義を覚える。

- $付加価値 = 人件費 + 賃借料 + 税金 + 負債利子 + 当期純利益$
- $労働生産性 = 付加価値額 \div 平均従業員数$
- $付加価値率 = 付加価値額 \div 売上高$
- $労働装備率 = 平均有形固定資産 \div 平均従業員数$
- $設備生産性 = 付加価値額 \div 平均有形固定資産$
- $労働分配率 = 人件費 \div 付加価値額$

### 関係を覚える

- $労働生産性 = 一人当たり売上高 \times 付加価値率$
- $労働生産性 = 労働装備率 \times 設備生産性$
- $一人当たり人件費 =労働生産性 \times 労働分配率$




## 不確実性の分析

### 費用構造が利益変動に及ぼす影響

**損益分岐点**(cost-volume-profit)とは，売上と費用が同額となる点をいい，そのときの売上高を損益分岐点売上高といいます。
いろいろ説明しますが，以下の図で理解するのが一番早いです。

![損益分岐点分析](img/CVP.png)

損益分岐点を計算するために必要な要素は，

- 収益
- 変動費
- 固定費

の3つである。

横軸を個数，縦軸を金額とするグラフを考えてみましょう。
売上高$S$は，販売単価$P$と個数$X$との積であるため，$P \times X$となる。
変動費は，操業度(ここでは売上高)に応じて変化する費用であり，変動費の単価$V$と個数$X$の積$V \times X$で表します。
売上高が1増えたときに，変動費がどれだけ増えるのかを知るために，変動費単価$V$を販売単価$P$で除したもの$V/P$を**変動費比率**といいます。
固定費は，操業度にかかわらず一定の費用であり，$F$で表す。
変動費と固定費の合計である総費用$C$は次のように表すことができる。

$$
C = V \times X + F
$$

損益分岐点売上個数は，定義から$S = C$ つまり，$P\times X =  V \times X + F$の方程式を$X$で解いたものになります。
解いてみましょう。
$$
\begin{aligned}
P\times X &=  V \times X + F\\
P\times X -  V \times X &= F\\
(P - V) X & = F\\
X &= \frac{F}{P-V}\\
X &= \frac{F}{1- \frac{V}{P}}
\end{aligned}
$$

つまり，
$$
X = \frac{\text{固定費}}{1- \text{変動費率}}
$$

となり，損益分岐点売上高が$\text{固定費} / (1-\text{変動費率})$ となることが分かるります。
ここで，$1-\text{変動費率}$を**限界利益**といい，損益分岐点売上高は，固定費を限界利益で割ったものになります。
要するに，販売個数を1つ増やすごとに増える利益で，固定費を埋めることができる点が損益分岐点なのです。

$$
損益分岐点売上高= \frac{固定費}{限界利益}
$$

しかし，この計算を行うためには，費用を変動費と固定費に分ける必要があり，これは難しいのです。
実務では，企業の中で基準が設けられますが，企業の外から入手できる情報から，変動費と固定費を正確に分けることができないため，簡便的な分類方法を用います。

### 総費用法

これは売上高と総費用の2期間比較から変動費率を計算する方法で，もっとも簡単な方法となります。

$$
変動費率 = \frac{総費用_{t} - 総費用_{t-1}}{売上高_{t} - 売上高_{t-1}}
$$

ここで計算された変動費率を売上高にかけることで，変動費を計算する。

$$
変動費=変動費率 \times 売上高
$$

### 最小二乗法

回帰分析手法である最小二乗法を用いて変動費率を計算する方法である。これは比較的データが多く取得可能なときに利用可能だが，年次データともなると，過去5年程度のデータが必要となり，長期間になればなるほど，固定費が変動費となってしまうため，四半期データを用いるなど工夫が必要となる。

総費用を売上高で回帰する。

$$
Y = a + bX+\varepsilon
$$

総費用$Y$  と売上高$X$ のデータを用いて，変動費率と解釈できる回帰パラメータ$b$   を推定する。最小二乗法の定義より，回帰係数$b$ は以下のようになる。

$$
b = \frac{\mathrm{cov}(Y,X)}{\mathrm{var}(Y)}=\frac{(X_i - \bar X)(Y_i - \bar Y)}{(Y_i - \bar Y)^2}
$$

つまり，売上高と総費用の平均を計算し，各データから平均値を差し引く。総費用の平均偏差の二乗を分母に，分子には売上高と総費用の平均偏差のかけ算を行うことで回帰係数が計算できる。たぶん，試験にはでないだろう。

### 費目別法

費用項目ごとに，何が固定費で何が変動費かを考えて分類する方法である。問題文で条件が指示されれば可能かもしれないが，現実には無理だとおもうので，試験には出ないような気がする。

結論，**総費用法をしっかり覚えておく**。

### 損益分岐点比率と営業レバレッジ

実際の売上高と損益分岐点売上高との相対的な規模比較をするための尺度が，損益分岐点比率である。


$$
損益分岐点比率 = \frac{損益分岐点売上高}{実際の売上高}
$$

実際の売上高と損益分岐点売上高との間の距離のような尺度として安全余裕度がある。

$$
安全余裕度 = 1 - 損益分岐点比率
$$

安全余裕度が高いほど，売上高が減少しても，まだ損益分岐点売上高まで差があることを意味している。損益分岐点を低くするためには，

- 売上高の増加
- 変動費率の引き下げ
- 固定費の削減

が必要となる。

売上高の変化が利益の変化に与える影響の度合いを示す尺度に，営業レバレッジがある。

$$
営業レバレッジ = \frac{営業利益変化率}{売上高変化率} = \frac{1}{1-損益分岐点比率} = \frac{1}{安全余裕度}
$$

となる。この式の導出は，以下のページを参照すること。

[営業レバレッジ](https://www.notion.so/27cd3c82559d400a9442361e125cd251?pvs=21)

ここは，時間がかかりそうなので，何度も問題を解いてパターンになれておくこと。
